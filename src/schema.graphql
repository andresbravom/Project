type Street {
        _id: ID!
        name: String!
        lenght: Float!
        startCoordinate: [Float!]
        endCoordinate: [Float!]
        speed: Int!
        segment: [Segment!]

    }

    type Segment {
        _id: ID!
        lenght: Float!
        speed: Int!
        startCoordinate: [Float!]
        middleCoordinate: [Float!]
        endCoordinate: [Float!]
        intersection: [Float!]
        street: Street!
        signal: [Signal]!
    }

    type Signal {
        _id: ID!
        index: Int!
        name: String!
        lenght: Float!
        type: String!
        coordinate: Float!
        probability: Float!
        segment: [Segment!]
    }

    type Query {
        getStreet (id: ID!): [Street]
        getSegment (id: ID!): [Segment]
        getSignal (id: ID!): [Signal]
    }

    type Mutation {
        addStreet (name: String!, lenght: Float!, startCoordinate: [Float!], endCoordinate: [Float!], speed: Int!): Street!
        addSegment (street: ID!): Segment
        addSignal (name: String!, type: String!, coordinate: Float!, probability: Float!): Signal!
        updateStreet (id: ID!, name: String, lenght: Float, startCoordinate: [Float], endCoordinate: [Float]): Street!
        updateSegment (id: ID!, lenght: Float, speed: Int, startCoordinate: [Float], middleCoordinate: [Float], endCoordinate: [Float], intersection: [Float], street: ID!, signal: [ID!]): Segment!
        updateSignal (id: ID!, name: String, type: String, coordinate: [Float], probability: Float): Signal!
        removeStreet (id: ID!): Street
    }