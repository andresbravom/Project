type Street {
    _id: ID!
    name: String!
    lenght: Float!
    speed: Int!
    segment: [Segment]!
    values: [Values]!
}
type Intersection {
    _id: ID
    lenght: Int!
    rightState: Boolean!
    leftState: Boolean!
    frontState: Boolean!
    street: [Street]!
}
type Segment {
    _id:ID
    index: Int!
    lenghtSegment: Float!
    street: Street!
    signal: [Signal]
}
type Signal {
    _id: ID!
    name: String!
    location: Float!
    type: String!
    probability: Float!
    description: String!
    segment: [Segment!]
}
type Values { 
    _id: ID!
    street: Street!
    p: Float!
    Cd: Float!
    A: Float!
    M: Float!
    G: Float!
    fr: Float!
}
type Query {
    getStreetID(_id: ID): Street
    getIntersectionID(_id: ID): [Intersection]
    getSegmentID(_id: ID): [Segment]
    getSignalID(_id: ID): [Signal]
    getStreet: [Street]
    getIntersection: [Intersection]
    getSegment: [Segment]
    getSignal: [Signal]
    getCalcule(street: ID): [Segment]
    getValues: [Values]
    getO1:Float!
}
type Mutation {
    addStreet (name: String!, lenght: Float!, speed: Int!): Street!
    addIntersection (lenght: Float!, rightState: Boolean, leftState: Boolean, frontState: Boolean, street: [ID]!): Intersection!
    addSegment (street: ID!, signal: [ID]): Segment!
    addSignal (name: String!, location: Float!, type: String!, probability: Float!, description: String): Signal!
    addValues (street: ID!, p: Float!, Cd: Float!, A: Float!, M: Float!, G: Float!, fr: Float!): Values!
    updateValues (_id: ID!, p: Float, Cd: Float, A: Float, M: Float, G: Float, fr: Float): Values!
    updateStreet (_id: ID!, name: String, lenght: Float, speed: Int): Street!
    # updateSegment (id: ID!, lenght: Float, speed: Int, startCoordinate: [Float], middleCoordinate: [Float], endCoordinate: [Float], intersection: [Float], street: ID!, signal: [ID!]): Segment!
    updateSignal (_id: ID!, name: String, location: Float, type: String, probability: Float, description: String): Signal!
    removeStreet (_id: ID!): Street!
    removeSegments (street: ID!): Segment!
    removeValues (_id: ID!): Values!
    removeSignal (_id: ID): Signal!
}